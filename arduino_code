#include <ESP8266HTTPClient.h>
#include <ESP8266WiFi.h>
#include <ArduinoJson.h>
#include <ESP8266WebServer.h>

ESP8266WebServer server(80);
//variables here.....
//wifi credentials here...
//values of json nodes here.....
//link of api here for local server...
int r1,r2;
int tmp=1;
void setup() {
  int l=0;
r1=0;
r2=0;
  //bulb connections and relay setup here.........
  Serial.begin(115200); //Serial connection
  WiFi.begin("JioFi3_4127D2", "243hjd7vmf"); //WiFi connection
  
  
  while (WiFi.status() != WL_CONNECTED) {  //Wait for the WiFI connection completion
  delay(500);
  Serial.println("Waiting for connection");
  Serial.println("RED BLIBKING");
  
   
   if (WiFi.status() == WL_CONNECTED) { //Check WiFi connection status
    Serial.println("connected");
    Serial.println("Server listening at:");
    Serial.println(WiFi.localIP());
   }

   
 server.on("/get_command",get_command); 
 server.on("/get_sts", get_sts);
  server.on("/get_relay_status", get_relay_status);    
  server.begin();                                       //Start the server
  
    //===============================================================
  }
/*
  
  do{
    Serial.println("blink blue LED!");
    Serial.println("Router connected!");
    Serial.println("trying to Register with Raspberry Pi");
    StaticJsonBuffer<300> JSONbuffer;   //Declaring static JSON buffer
    JsonObject& JSONencoder = JSONbuffer.createObject(); 
    JSONencoder["DVC_NAME"] = "Soxket2";
    JSONencoder["DVC_IPADDR"] = WiFi.localIP().toString();  
    JSONencoder["RELAY_SIZE"] = "2";
    JSONencoder["SOCKET_STATUS"] = "1";
    char JSONmessageBuffer[300];
    JSONencoder.prettyPrintTo(JSONmessageBuffer, sizeof(JSONmessageBuffer));
    Serial.println(JSONmessageBuffer);
    HTTPClient http;//Declare object of class HTTPClient
    http.begin("http://192.168.225.146/api/v1.0/output_device/ins"); //Specify request destination
    http.addHeader("Content-Type", "application/json");//Specify content-type header
 
    int httpCode = http.POST(JSONmessageBuffer);//Send the request
    String payload = http.getString();//Get the response payload
 
    Serial.println(httpCode);   //Print HTTP return code
    Serial.println(payload);    //Print request response payload
  
   
   if(payload=="1")
    {
      l=1;
      
     }
   
     Serial.println("BLUE BLINKING");
    http.end();  //Close connection
    //check here the status returned by raspberry pi if its 1 then close loop
    //and set value of tmp=0;
    delay(6000);
    //l=1;
    }
    while(l==0);
//===============================================================
*/

/*
do{
  Serial.println("Blue led blinking");
   http.begin("http://jsonplaceholder.typicode.com/users/1");  //Specify request destination
   int httpCode = http.GET();                                                                  //Send the request
   int counter=0;
    if (httpCode > 0) {  
      String payload1 = http.getString();   //Get the request response payload
      Serial.println(payload);                     //Print the response payload
     }
 
    http.end();
     if(payload1.toInt()=='1')
    {
      tmp=-1;
     }
      
    delay(10000);
   counter++;
   if(counter==10)
   {
    tmp=-1;
    }
  
  }
  while(tmp==1)    
*/
}

void loop() {

   server.handleClient();
}


//all methods declaration here............
 void get_relay_status()
  {
     StaticJsonBuffer<300> JSONbuffer;   //Declaring static JSON buffer
    JsonObject& JSONencoder = JSONbuffer.createObject(); 
    JSONencoder["1"] = r1;
    JSONencoder["2"] = r2;  
   
    char JSONmessageBuffer[300];
    JSONencoder.prettyPrintTo(JSONmessageBuffer, sizeof(JSONmessageBuffer));
   
      server.send(200, "text/plain", JSONmessageBuffer);
            return;
    
    }

void get_sts()
{
  server.send(200, "text/plain", "1");
  return;
}

 void get_command()
 {
    if (server.hasArg("plain")== false){ 
      //Check if body received
        server.send(200, "text/plain", "Body not received");
        return;
 }
 
      String message = "Body received:\n";
      message += server.arg("plain");
      message += "\n";
      String command =server.arg("plain");
    //Serial.println(server.arg("plain"));
      server.send(200, "text/plain", message);
      Serial.print(command);
      Serial.print(command[2]);
      Serial.print(command[7]);
      
      if(command[2]=='1' && command[7]=='0')
       {
         Serial.println("Relay 1 is off");
         r1=0;
        }

        
          if(command[2]=='1' && command[7]=='1')
          {
         Serial.println("Relay 1 is on");
         r1=1;
         }


       if(command[2]=='2' && command[7]=='0')
         {
         Serial.println("Relay 2 is off");
         r2=0;
         }
         
          if(command[2]=='2' && command[7]=='1')
          {
          Serial.println("Relay 2 is on");
          r2=1;
          }
     
     
  }
//1. blink blue 2. blink green 3. blink red
